module testMVector

using
    ..PhysicalFields

export run

function run(at_dir::String)
    println("These program tests mutable column vectors.")
    println()
    println("First we test its three constructors.")
    vi = [1.0, 2.0, 3.0]
    vj = [4.0,-5.0, 6.0]
    vk = [7.0, 8.0,-9.0]
    v‚ÇÅ = MVector(3)
    v‚ÇÇ = MVector(vj)
    v‚ÇÉ = MVector(3, vk)
    println("The vector constructed by giving its length returns zeros")
    println("   v‚ÇÅ = ", toString(v‚ÇÅ))
    v‚ÇÅ[1] = vi[1]
    v‚ÇÅ[2] = vi[2]
    v‚ÇÅ[3] = vi[3]
    println("that are then reassigned values of")
    println("   v‚ÇÅ = ", toString(v‚ÇÅ))
    println("The vector constructed from assigned vector [4.0,-5.0, 6.0] returns")
    println("   v‚ÇÇ = ", toString(v‚ÇÇ))
    println("while the vector of length 3 with values of [7.0, 8.0,-9.0] returns")
    println("   v‚ÇÉ = ", toString(v‚ÇÉ)) 
    println("The logical functions return")
    println("    v‚ÇÅ == v‚ÇÇ is ", toString(v‚ÇÅ==v‚ÇÇ))
    println("    v‚ÇÅ ‚â† v‚ÇÇ  is ", toString(v‚ÇÅ‚â†v‚ÇÇ))
    println("    v‚ÇÅ ‚âà v‚ÇÇ  is ", toString(v‚ÇÅ‚âàv‚ÇÇ))
    println("while the arithmatic operators return")
    println("    +v‚ÇÅ     = ", toString(+v‚ÇÅ))
    println("    -v‚ÇÅ     = ", toString(-v‚ÇÅ))
    println("    v‚ÇÅ + v‚ÇÇ = ", toString(v‚ÇÅ+v‚ÇÇ))
    println("    v‚ÇÅ - v‚ÇÇ = ", toString(v‚ÇÅ-v‚ÇÇ))
    println("    v‚ÇÅ * v‚ÇÇ = ", toString(v‚ÇÅ*v‚ÇÇ))
    println("that given x = 3.0")
    x = 3.0
    println("    x * v‚ÇÅ = ", toString(x*v‚ÇÅ))
    println("    v‚ÇÅ / x = ", toString(v‚ÇÅ/x))
    println("Vector functions include")
    println("    ||v‚ÇÅ|| = ", toString(norm(v‚ÇÅ)))
    println("        ùïñ‚ÇÅ = ", toString(unitVector(v‚ÇÅ)))
    println("   v‚ÇÅ √ó v‚ÇÇ = ", toString(cross(v‚ÇÅ,v‚ÇÇ)))
    println()
    println("Now we test writing/reading mutable vectors to/from a file.")
    println()
    my_dir_path = string(at_dir, "/test/files/")
    json_stream = openJSONWriter(my_dir_path, "testMVector.json")
    toFile(vi, json_stream)
    toFile(v‚ÇÇ, json_stream)
    close(json_stream)
    json_stream = openJSONReader(my_dir_path, "testMVector.json")
    r‚ÇÅ = fromFile(Vector{Float64}, json_stream)
    println("An instance of type Vector.")
    println("   It should read as ", toString(vi), ".")
    println("   It reads as:      ", toString(r‚ÇÅ), ".")
    r‚ÇÇ = fromFile(MVector, json_stream)
    println("An instance of type MVector.")
    println("   It should read as ", toString(v‚ÇÇ), ".")
    println("   It reads as:      ", toString(r‚ÇÇ), ".")
    close(json_stream)
    println()
    println("To verify that a read-in vector is mutable,")
    println("reassign vector  ", toString(r‚ÇÅ))
    println("so that it reads ", toString(r‚ÇÇ))
    for i in 1:3
        r‚ÇÅ[i] = r‚ÇÇ[i]
    end
    println("It now reads as ", toString(r‚ÇÅ))
    println()
    println("If these answers make sense, then this test passes.")
    return nothing
end  # function run

end  # module testMVector